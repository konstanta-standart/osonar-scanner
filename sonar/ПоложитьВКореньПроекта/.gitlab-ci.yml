
stages:
  - qa

before_script:
  - CHCP 65001

qa-branch:
  stage: qa
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: true
  tags:
    - windows
    - sonar_scanner
    - stebi
  except:
    - merge_requests
    - main # исключить, т.к. гоняется через jenkins
    - master # исключить, т.к. гоняется через jenkins
  only:
    - develop # долгоживущие ветки. По коротким достаточно MR
  script:
    - git clone "https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.com/Konstanta/common/gitlab-ci.git" .\gitlab_ci
    - oscript ".\gitlab_ci\sonar\sonar_scanner.os"
    - if ($Env:DEBUG_CI -ne $true) {Remove-Item -Path .\gitlab_ci -Recurse -Force}

qa-mr:
  stage: qa
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: true
  tags:
    - windows
    - sonar_scanner
    - stebi
  only:
    - merge_requests
  script:
    - git clone "https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.com/Konstanta/common/gitlab-ci.git" .\gitlab_ci
    - oscript ".\gitlab_ci\sonar\sonar_scanner.os" -mr
    - if ($Env:DEBUG_CI -ne $true) {Remove-Item -Path .\gitlab_ci -Recurse -Force}

# Ручной запуск проверки по любой ветке
qa-branch-manual:
  stage: qa
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  allow_failure: true
  tags:
    - windows
    - sonar_scanner
    - stebi
  script:
    - git clone "https://gitlab-ci-token:$CI_JOB_TOKEN@gitlab.com/Konstanta/common/gitlab-ci.git" .\gitlab_ci
    - oscript ".\gitlab_ci\sonar\sonar_scanner.os"
    - if ($Env:DEBUG_CI -ne $true) {Remove-Item -Path .\gitlab_ci -Recurse -Force}
  when: manual

