#Использовать v8metadata-reader

Перем Sonar_host_url Экспорт;
Перем Sonar_token Экспорт;
Перем ProjectName Экспорт;
Перем ProjectKey Экспорт;
Перем ProjectCatalog Экспорт;
Перем Src Экспорт;
Перем ProjectVersion Экспорт;
Перем EDT_Check Экспорт;
Перем EDT_version Экспорт;
Перем Debug_Scanner Экспорт;
Перем Debug_CI Экспорт;
Перем ExternalIssuesReportPaths Экспорт;
Перем ExternalIssuesReportSettings Экспорт;

Перем Лог;

Процедура ПриСозданииОбъекта(пЛог)
	
	Лог = пЛог;

	ЗаполнитьПараметрыПроектаИзФайлаНастроек();
	ЗаполнитьПараметрыПроектаПеременнымиСреды();
	ЗаполнитьПараметрыЗначениямиПоУмолчанию();
	
	отказ = Ложь;
	
	ПроверитьПараметр("sonar_host_url", отказ);
	ПроверитьПараметр("sonar_token", отказ);
	ПроверитьПараметр("projectName", отказ);
	ПроверитьПараметр("projectKey", отказ);
	ПроверитьПараметр("ProjectCatalog", отказ);
	ПроверитьПараметр("Src", отказ);
	ПроверитьПараметр("ProjectVersion", отказ);
	
	Если отказ Тогда
		ЗавершитьРаботу(1);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыПроектаИзФайлаНастроек()
	
	лог.Отладка("Начало.Заполнение параметров из файла настроек.");

	параметрыИзФайла = ПрочитатьJSONФайл("./.project-settings.json");
	
	ЗаполнитьПараметрИзФайлаНастроек("ProjectCatalog", параметрыИзФайла["ProjectCatalog"]);
	
	параметрыСонара = параметрыИзФайла["Sonar"];
	
	Если Не параметрыСонара = Неопределено Тогда
		
		ЗаполнитьПараметрИзФайлаНастроек("sonar_host_url", параметрыСонара["HostUrl"]);
		ЗаполнитьПараметрИзФайлаНастроек("projectName", параметрыСонара["ProjectName"]);
		ЗаполнитьПараметрИзФайлаНастроек("projectKey", параметрыСонара["ProjectKey"]);
		ЗаполнитьПараметрИзФайлаНастроек("EDT_Check", параметрыСонара["EDT_Check"]);
		ЗаполнитьПараметрИзФайлаНастроек("EDT_version", параметрыСонара["EDT_version"]);
		ЗаполнитьПараметрИзФайлаНастроек("Debug_Scanner", параметрыСонара["Debug_Scanner"]);
		ЗаполнитьПараметрИзФайлаНастроек("ExternalIssuesReportSettings", параметрыСонара["ExternalIssuesReportSettings"]);
		
	КонецЕсли;

	лог.Отладка("Конец.Заполнение параметров из файла настроек.");
	
КонецПроцедуры

Функция ПрочитатьJSONФайл(Знач пИмяФайла)
	
	файл = Новый Файл(пИмяФайла);
	
	Если Не файл.Существует() Тогда
		Возврат Новый Соответствие;
	КонецЕсли;
	
	ЧтениеТекста = Новый ЧтениеТекста(пИмяФайла, "UTF-8");
	Лог.Отладка("Текст из файла настроек %1", пИмяФайла);
	Лог.Отладка(ЧтениеТекста.Прочитать());
	ЧтениеТекста.Закрыть();
	
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.ОткрытьФайл(пИмяФайла, "UTF-8");
	
	прочитанноеЗначение = ПрочитатьJSON(ЧтениеJSON, Истина);
	
	ЧтениеJSON.Закрыть();
	
	Возврат прочитанноеЗначение;
	
КонецФункции

Процедура ЗаполнитьПараметрИзФайлаНастроек(Знач ИмяПараметра, Знач ЗначениеПараметра, Знач СкрытьЗначение = Ложь)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяПараметра]) Тогда
		Возврат;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЗначениеПараметра) Тогда
		
		ЭтотОбъект[ИмяПараметра] = ЗначениеПараметра;
		
		лог.Отладка("%1 = %2 (%3)",
			ИмяПараметра,
			ОбщегоНазначения.ПредставлениеПараметра(ЗначениеПараметра, СкрытьЗначение),
			ТипЗнч(ЗначениеПараметра));
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыПроектаПеременнымиСреды()
	
	лог.Отладка("Начало.Заполнение параметров из переменных среды.");

	ЗаполнитьПараметрИзПеременнойСреды("sonar_host_url", "SONAR_HOST_URL");
	ЗаполнитьПараметрИзПеременнойСреды("sonar_token", "SONAR_TOKEN", Истина);
	ЗаполнитьПараметрИзПеременнойСреды("projectName", "PROJECT_NAME");
	ЗаполнитьПараметрИзПеременнойСреды("projectKey", "PROJECT_KEY");
	ЗаполнитьПараметрИзПеременнойСреды("ProjectCatalog", "PROJECT_CATALOG");
	ЗаполнитьПараметрИзПеременнойСреды_Флаг("EDT_Check", "EDT_CHECK");
	ЗаполнитьПараметрИзПеременнойСреды("EDT_version", "EDT_VERSION");
	ЗаполнитьПараметрИзПеременнойСреды("ExternalIssuesReportSettings", "GENERIC_ISSUE_SETTINGS_JSON");
	ЗаполнитьПараметрИзПеременнойСреды_Флаг("Debug_Scanner", "DEBUG_SCANNER");
	ЗаполнитьПараметрИзПеременнойСреды_Флаг("Debug_CI", "DEBUG_CI");
	
	лог.Отладка("Конец.Заполнение параметров из переменных среды.");

КонецПроцедуры

Процедура ЗаполнитьПараметрИзПеременнойСреды(Знач ИмяПараметра, Знач ИмяПеременнойСреды, Знач СкрытьЗначение = Ложь)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяПараметра]) Тогда
		Возврат;
	КонецЕсли;

	значениеПараметра = ОбщегоНазначения.ПолучитьПеременнуюСреды_UTF8(ИмяПеременнойСреды, Лог, СкрытьЗначение);
	
	Если ЗначениеЗаполнено(значениеПараметра) Тогда
		
		ЭтотОбъект[ИмяПараметра] = значениеПараметра;

	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрИзПеременнойСреды_Флаг(Знач ИмяПараметра, Знач ИмяПеременнойСреды)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяПараметра]) Тогда
		Возврат;
	КонецЕсли;

	значениеПараметра = ОбщегоНазначения.ПолучитьПеременнуюСреды_UTF8(ИмяПеременнойСреды, лог);
	
	Если ЗначениеЗаполнено(значениеПараметра) Тогда
	
		значениеПараметра = НРег(значениеПараметра) = "true" ИЛИ НРег(значениеПараметра) = "истина";
		
		ЭтотОбъект[ИмяПараметра] = значениеПараметра;

	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПараметрыЗначениямиПоУмолчанию()
	
	лог.Отладка("Начало.Заполнение параметров по умолчанию.");

	Если ЗначениеЗаполнено(ProjectCatalog) Тогда

		ЗаполнитьПараметрЗначениемПоУмолчанию("Src", ".\" + ProjectCatalog + "\src");
		
		ИнформацияОКонфигурации = Новый ИнформацияОКонфигурации(Src);
		ЗаполнитьПараметрЗначениемПоУмолчанию("projectVersion", ИнформацияОКонфигурации.ВерсияКонфигурации());
		
		Если Не ЗначениеЗаполнено(ProjectVersion) Тогда
			
			Лог.Ошибка("Не удалось получить версию конфигурации из каталога %1", Src);
			
		КонецЕсли;

	КонецЕсли;

	ЗаполнитьПараметрЗначениемПоУмолчанию("sonar_host_url", "http://server-test:9000/");
	ЗаполнитьПараметрЗначениемПоУмолчанию("sonar_token", "");
	ЗаполнитьПараметрЗначениемПоУмолчанию("projectName", ОбщегоНазначения.ПолучитьПеременнуюСреды_UTF8("CI_PROJECT_NAME"));
	ЗаполнитьПараметрЗначениемПоУмолчанию("projectKey", "project_" + ПолучитьПеременнуюСреды("CI_PROJECT_ID"));
	ЗаполнитьПараметрЗначениемПоУмолчанию("ProjectCatalog", "");
	ЗаполнитьПараметрЗначениемПоУмолчанию("Src", "");
	ЗаполнитьПараметрЗначениемПоУмолчанию("projectVersion", "1.0.1.1");
	ЗаполнитьПараметрЗначениемПоУмолчанию("EDT_Check", Ложь);
	ЗаполнитьПараметрЗначениемПоУмолчанию("EDT_version", "2021.2.6");
	ЗаполнитьПараметрЗначениемПоУмолчанию("Debug_Scanner", Ложь);
	ЗаполнитьПараметрЗначениемПоУмолчанию("Debug_CI", Ложь);
	ЗаполнитьПараметрЗначениемПоУмолчанию("ExternalIssuesReportPaths", "");
	ЗаполнитьПараметрЗначениемПоУмолчанию("ExternalIssuesReportSettings", ".\gitlab_ci\sonar\settings.json");

	лог.Отладка("Конец.Заполнение параметров по умолчанию.");

КонецПроцедуры

Процедура ЗаполнитьПараметрЗначениемПоУмолчанию(Знач ИмяПараметра, Знач значениеПараметра)
	
	Если ЗначениеЗаполнено(ЭтотОбъект[ИмяПараметра]) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект[ИмяПараметра] = значениеПараметра;
	
	лог.Отладка("%1 = %2",
		ИмяПараметра,
		ОбщегоНазначения.ПредставлениеПараметра(значениеПараметра));
	
КонецПроцедуры

Процедура ПроверитьПараметр(Знач ИмяПараметра, Отказ)
	
	значениеПараметра = ЭтотОбъект[ИмяПараметра];
	
	Если Не ЗначениеЗаполнено(значениеПараметра) Тогда
		
		Лог.Ошибка("Параметр %1 не заполнен.", ИмяПараметра);
		Отказ = Истина;
		
	КонецЕсли;
	
КонецПроцедуры
